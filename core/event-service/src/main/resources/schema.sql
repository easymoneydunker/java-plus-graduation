CREATE SCHEMA IF NOT EXISTS event;

DROP TABLE IF EXISTS event.views CASCADE;
DROP TABLE IF EXISTS event.compilation_event CASCADE;
DROP TABLE IF EXISTS event.compilation CASCADE;
DROP TABLE IF EXISTS event.event CASCADE;
DROP TABLE IF EXISTS event.category CASCADE;
DROP TABLE IF EXISTS event.location CASCADE;

CREATE TABLE event.location
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE INDEX ix_location_on_lat_n_lon ON event.location (lat, lon);

CREATE TABLE event.category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    CONSTRAINT category_name_unique UNIQUE (name)
);

CREATE TABLE event.event
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id        BIGINT,
    user_id            BIGINT,
    location_id        BIGINT,
    title              VARCHAR(120),
    annotation         TEXT,
    description        TEXT,
    confirmed_requests INTEGER NOT NULL,
    participant_limit  INTEGER NOT NULL,
    request_moderation BOOLEAN NOT NULL,
    paid               BOOLEAN NOT NULL,
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    state              VARCHAR(255)
);

CREATE INDEX ix_event_on_user_id ON event.event (user_id);
CREATE INDEX ix_event_on_state ON event.event (state);
CREATE INDEX ix_event_on_category_id ON event.event (category_id);

CREATE TABLE event.views
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT      NOT NULL,
    ip       VARCHAR(15) NOT NULL,
    CONSTRAINT uq_views UNIQUE (event_id, ip)
);

CREATE TABLE event.compilation
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN     NOT NULL,
    title  VARCHAR(50) NOT NULL
);

CREATE INDEX ix_compilation_on_pinned ON event.compilation (pinned);

CREATE TABLE event.compilation_event
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id)
);
